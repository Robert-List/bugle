# Checks for errors (written to stdout), and logs all calls to file
# Uncomment the "flush" line to have the log flushed after every call.
# This is slow but will guarantee as complete as possible a log in the
# event of a crash
chain trace
{
    filterset error
    filterset log
    {
    	filename "/tmp/bugle.log"
        # flush "yes"
    }
    filterset invoke
}

# Wait for a line of input from stdin whenever a particular function is
# called (before executing it). You can also type in "state" to get a
# crude state dump, and "quit" to abort the program. You may have multiple
# break statements
chain step
{
    filterset debugger
    {
    	break glXSwapBuffers
    }
    filterset invoke
}

# Similar to step, this will stop after a number of drawing commands.
# It also uses the "frontbuffer" filterset to force drawing to the
# front buffer, so you can see each component as it is drawn.
chain stepdraw
{
    filterset invoke
    filterset frontbuffer
    filterset debugger
    {
        break glEnd
        break glDrawArrays
        break glDrawElements
        break glDrawRangeElements
        break glMultiDrawArrays
        break glCallList
    }
}

# A cut hack to get a wireframe mode
chain wireframe
{
    filterset wireframe
    filterset invoke
}

# Use this if your program is crashing somewhere inside the driver, and you
# can't get a useful stack trace (this happens with NVIDIA's drivers). Run
# your program inside gdb, and when your receive SIGSEGV, select to continue.
# You will see a message from the library, and another SIGSEGV will occur.
# At this point gdb should give you a meaningful back-trace.
chain crash
{
    filterset invoke
    filterset unwindstack
}

# Simply pass through commands to OpenGL
chain pass
{
    filterset invoke
}
