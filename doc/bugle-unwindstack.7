.TH unwindstack 7 "May 2006" BUGLE "User manual"
.SH NAME
unwindstack \- recover a stack trace after a segmentation fault
.SH SYNOPSIS
.nf
filterset unwindstack
.fi
.SH DESCRIPTION
Some OpenGL drivers (particularly proprietry drivers) are compiled
without frame pointer information. The result is that if you pass a bad
pointer to the driver, causing it to segfault,
.BR gdb (1)
is unable to produce a stack trace showing that location of the fault.
This filter-set uses some ugly hacks to try to correct this.

When using this filter-set and debugging your application in
.BR gdb ,
the segmentation fault will still leave you without a stack trace.
However, if you continue running, you will get a second segmentation
fault, at which point a stack trace is available.

Note that the call that causes the segmentation fault may not be the
direct cause; for example, a bad pointer passed to
.BR glVertexPointer (3)
might only cause a segmentation fault in
.BR glDrawArrays (3).
See also the
.B checks
filter-set, which does some aggressive error-checking and can detect
some of these conditions.
.SH BUGS
The method used to recover the stack trace violates POSIX rules (and
common sense) about the use of
.BR setjmp (3). 
It works for me under Linux with NVIDIA drivers, but your mileage might
vary.
.SH AUTHOR
.B gldb
and the
.B bugle
library are written and maintained by Bruce Merry
<bmerry@users.sourceforge.net>.
.SH SEE ALSO
.BR bugle (3),
.BR bugle-checks (7),
.BR setjmp (3)
