BuGLe alpha release
===================

This is a very alpha release, and may not due what you want. If you
have problems installing, please refer to the TROUBLESHOOTING file. It
has, however, been tested on GNU/Linux with NVIDIA drivers and on
FreeBSD with Mesa. I would like to support all POSIX platforms that use
X, dynamic loading and something like LD_PRELOAD; if your platforms
meet these requirements but you can't get it to work then let me know
why.

Here are a few things you can do so far
- capture a log of what a program does (won't capture everything yet)
- check for GL errors after every call
- force a wireframe mode
- run inside a gdb-like debugger, with breakpoints on GL functions and
  (optionally) stopping after every error.

To build, you will need a version of gcc that supports the
-fdump-translation-unit flag. It was introduced by 3.2, but was not
present in 2.95 or 3.0. See the FAQ for an explanation of why you have
to use a recent gcc. Generic build instructions are in INSTALL.

To run usefully, you will need a configuration file
$HOME/.bugle/filters. You can copy the example file doc/examples/filters.
Execute your program something like the following:

$ BUGLE_CHAIN=trace LD_PRELOAD=/usr/local/lib/libbugle.so glxgears

where BUGLE_CHAIN specifies a combination of filters to use. The name
references a section in the configuration file; the example file
documents the configurations it provides. For more details, see the
manual page bugle(3).

The debugger is called gldb and is documented in the manual page.

Feedback
========
I am interested in getting feedback about this tool: bugs you've found
(but first read this file and the FAQ to make sure it isn't already
known), suggestions for improvements, whatever. My address is
bmerry@users.sourceforge.net.
