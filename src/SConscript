#!/usr/bin/env python
Import('envs', 'api', 'targets')

envs['tu'].Tu(['data/gl.o', 'data/gl.tu'], 'data/gl.c')

targets['bugleutils'].update({
    'target': 'bugleutils',
    'version': '7.0.0'})
targets['bugleutils']['source'].extend([
    'gl/gltypes.c',
    'apireflect.c',
    'glwin/glwintypes.c',
    '../common/memory.c',
    '../common/protocol.c',
    '../common/hashtable.c',
    '../common/linkedlist.c',
    '../common/io.c',
    '../budgielib/internal.c',
    '../budgielib/reflect.c',
    '../budgielib/tables.c',
    'apitables.c'])
targets['bugleutils'].out = envs['host'].SharedLibrary2(**targets['bugleutils'])

targets['bugle'].update({
    'target': 'bugle',
    'version': '8.0.0'})
targets['bugle']['source'].extend([
    envs['host'].CFile('confparse.y', YACCFLAGS = '-d')[0],
    'conflex.l',
    'interceptor.c',
    'filters.c',
    'stats.c',
    'statslex.l',
    envs['host'].CFile('statsparse.y', YACCFLAGS = '-d')[0],
    'log.c',
    'objects.c',
    'input.c',
    '../budgielib/addresses.c',
    '../budgielib/lib.c',
    'gl/glutils.c',
    'gl/glsl.c',
    'glwin/trackcontext.c',
    'gl/gldisplaylist.c',
    'gl/globjects.c',
    'gl/glextensions.c',
    'gl/glbeginend.c',
    api.gltype + '/gldump.c',
    api.gltype + '/glstate.c',
    api.glwin + '/glwin.c'])
targets['bugle']['LIBS'].extend(targets['bugleutils'].out)
targets['bugle'].out = envs['host'].SharedLibrary2(**targets['bugle'])
