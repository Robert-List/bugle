THIS FILE IS OBSOLETE. Bugs and enhancements should now be listed in trac
(https://apps.https://apps.sourceforge.net/trac/bugle/). This file is left
here for things that haven't yet been entered into trac. Some of these are so
low priority that I will probably never get around to putting them in trac.

WGL port
--------
- better robustness to missing WGL/GLX extensions
- support read != draw DC in glwin.c
- handle cross-DLL data import/export cleanly
- put suitable visibility tags on all export functions, so that -export-symbols-regex and --export-all-symbols are not needed
- make gldb and gldb-gui work
  - kill takes out gldb-gui [fixed?]
- prevent libraries from being loaded twice
- fix crash in shutdown on es2demo [fixed?]
- make Cygwin work
- doc updates

camera filter-set
-----------------
- handle display lists properly
- do the right thing when event handling is in a different
  thread to rendering

gldb
----
- more robust wire protocol
  - ability to obtain list of functions for tab completion in the GUI
  - ability to get the target to do dump formatting when the client doesn't know how
- allow Ctrl-C to abort current line when reading commands
- set filter variables on the fly
- enable reporting of segfaults

gldb-gui
--------
- convert state names to UTF-8
- enabling and disabling filter sets, and setting variables
- texture viewer:
  - interaction with cube map cube
  - display of pixel values on cube map
  - stats
  - LOD bias
- trace window?
- figure out why BadValue is sometimes generated on exit [fixed?]
- statistics tab

bugle
-----
- check whether all dependencies on trackextensions are listed
- exploit per-context, per-filter state e.g. for video
- proper support for enabled but inactive filtersets
- rewrite some things to use hash tables
- autoconf test for GLENUM_IS_GLUINT
- better handling of texture proxies
- capture more information about call lists
- finish documenting API in DocBook

budgie
------
- robust logging, to avoid segfaulting
- move filter framework into budgie? May suck in input stuff

tests
-----
- multithreaded conformance tests
- coverage tests (glean?)
- autotool tests for glut

long term
---------
- internationalisation
- make gldb-gui tabs totally modular (separate shared objects)
- write support for state
- scons build system
