HEADER GLES2/gl2.h
HEADER GLES2/gl2ext.h
HEADER bugle/gl/gltypes.h
HEADER bugle/gl/gldump.h
HEADER bugle/gl/overrides.h
HEADER bugle/gl/glstate.h
LIMIT gl[A-Z][a-z].*

# Typedefs
NEWTYPE BITFIELD bufferbits GLbitfield GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT GL_STENCIL_BUFFER_BIT

EXTRATYPE +PKc
EXTRATYPE +Pc
EXTRATYPE +P7GLubyte
EXTRATYPE +P8GLushort
EXTRATYPE GLfloatmatrix
EXTRATYPE pGLfloatmatrix
EXTRATYPE GLerror
EXTRATYPE GLblendenum
EXTRATYPE GLprimitiveenum
EXTRATYPE GLcomponentsenum
EXTRATYPE GLbyte
EXTRATYPE GLushort
EXTRATYPE GLshort
EXTRATYPE GLfixed

EXTRATYPE GLvec2
EXTRATYPE GLvec3
EXTRATYPE GLvec4
EXTRATYPE GLivec2
EXTRATYPE GLivec3
EXTRATYPE GLivec4
EXTRATYPE GLmat2
EXTRATYPE GLmat3
EXTRATYPE GLmat4
EXTRATYPE GLbvec2
EXTRATYPE GLbvec3
EXTRATYPE GLbvec4

EXTRATYPE pGLvec2
EXTRATYPE pGLvec3
EXTRATYPE pGLvec4
EXTRATYPE pGLivec2
EXTRATYPE pGLivec3
EXTRATYPE pGLivec4
EXTRATYPE pGLmat2
EXTRATYPE pGLmat3
EXTRATYPE pGLmat4
EXTRATYPE pGLbvec2
EXTRATYPE pGLbvec3
EXTRATYPE pGLbvec4

TYPE PARAMETER glCompressedTexImage2D 7 bugle_gl_type_to_type_ptr_pbo_source(GL_UNSIGNED_BYTE)
TYPE PARAMETER glCompressedTexImage3DOES 8 bugle_gl_type_to_type_ptr_pbo_source(GL_UNSIGNED_BYTE)
TYPE PARAMETER glCompressedTexSubImage2D 8 bugle_gl_type_to_type_ptr_pbo_source(GL_UNSIGNED_BYTE)
TYPE PARAMETER glCompressedTexSubImage3D 10 bugle_gl_type_to_type_ptr_pbo_source(GL_UNSIGNED_BYTE)
LENGTH PARAMETER glCompressedTexImage2D 7 $6
LENGTH PARAMETER glCompressedTexImage3DOES 8 $7
LENGTH PARAMETER glCompressedTexSubImage2D 8 $7
LENGTH PARAMETER glCompressedTexSubImage3DOES 10 $9

TYPE PARAMETER glBufferData 2 TYPE_PK7GLubyte
TYPE PARAMETER glBufferSubData 3 TYPE_PK7GLubyte
LENGTH PARAMETER glBufferData 2 $1
LENGTH PARAMETER glBufferSubData 3 $2
LENGTH PARAMETER glGetBufferParameteriv 2 bugle_count_gl($f, $1)
DUMP PARAMETER glGetBufferParameteriv 2 bugle_dump_convert($1, &$$, $t$, $W)

# Handle generator and deletors
LENGTH PARAMETER gl(Gen|Delete)(Textures|Buffers|Framebuffers|Renderbuffers) 1 $0

# Functions where the count is determined by the token
LENGTH PARAMETER glDrawElements 3 bugle_gl_type_to_size($2) * $1
TYPE PARAMETER glTexImage2D 8 bugle_gl_type_to_type_ptr($7)
LENGTH PARAMETER glTexImage2D 8 bugle_image_element_count($3, $4, -1, $6, $7, BUGLE_TRUE)
TYPE PARAMETER glTexSubImage2D 8 bugle_gl_type_to_type_ptr($7)
LENGTH PARAMETER glTexSubImage2D 8 bugle_image_element_count($4, $5, -1, $6, $7, BUGLE_TRUE)

TYPE PARAMETER glReadPixels 6 bugle_gl_type_to_type_ptr($5)
LENGTH PARAMETER glReadPixels 6 bugle_image_element_count($2, $3, -1, $4, $5, BUGLE_FALSE)

# Both count and interpretation of type depend on the token
# Note that we only override length for the vector versions
LENGTH PARAMETER glGet(Boolean|Integer|Float|Double)v 1 bugle_count_gl($f, $0)
LENGTH PARAMETER gl(Get)?(TexParameter)[sifd]v 2 bugle_count_gl($f, $1)
DUMP PARAMETER glGet(Integer|Float|Double)v 1 bugle_dump_convert($0, &$$, $t$, $W)
DUMP PARAMETER gl(Get)?(TexParameter)[sifd]v? 2 bugle_dump_convert($1, &$$, $t$, $W)
DUMP PARAMETER glPixelStorei 1 bugle_dump_convert($0, &$$, $t$, $W)

# Assorted type overrides
TYPE PARAMETER glClear 0 TYPE_10bufferbits
TYPE PARAMETER glGetError -1 TYPE_7GLerror
TYPE PARAMETER glBlendFunc 0 TYPE_11GLblendenum
TYPE PARAMETER glBlendFunc 1 TYPE_11GLblendenum
TYPE PARAMETER glBlendFuncSeparate 0 TYPE_11GLblendenum
TYPE PARAMETER glBlendFuncSeparate 1 TYPE_11GLblendenum
TYPE PARAMETER glBlendFuncSeparate 2 TYPE_11GLblendenum
TYPE PARAMETER glBlendFuncSeparate 3 TYPE_11GLblendenum
TYPE PARAMETER glDrawArrays 0 TYPE_15GLprimitiveenum
TYPE PARAMETER glDrawElements 0 TYPE_15GLprimitiveenum
# C string, not array
TYPE PARAMETER glGetString -1 TYPE_PKc

# Dumping overrides
DUMP TYPE GLenum bugle_dump_GLenum($$, $W)
DUMP TYPE GLboolean bugle_dump_GLboolean($$, $W)
DUMP TYPE GLerror bugle_dump_GLerror($$, $W)
DUMP TYPE GLblendenum bugle_dump_GLblendenum($$, $W)
DUMP TYPE GLprimitiveenum bugle_dump_GLprimitiveenum($$, $W)
DUMP TYPE +PKc budgie_dump_string($$, $W)
DUMP TYPE +Pc budgie_dump_string($$, $W)
LENGTH TYPE +PKc budgie_count_string($$)
LENGTH TYPE +Pc budgie_count_string($$)

# Shading language
LENGTH PARAMETER glUniform([1234])[if]v 2 $1
LENGTH PARAMETER glUniformMatrix([234])fv 3 $1
TYPE PARAMETER glUniform([234])fv 2 TYPE_7pGLvec\1
TYPE PARAMETER glUniform([234])iv 2 TYPE_8pGLivec\1
TYPE PARAMETER glUniformMatrix([234])fv 3 TYPE_7pGLmat\1

LENGTH PARAMETER glShaderSource 2 $1
LENGTH PARAMETER glShaderSource 3 $1

LENGTH PARAMETER glGetAttachedShaders 3 bugle_count_attached_shaders($0, $1)

LENGTH PARAMETER glGetProgramiv 2 bugle_count_gl($f, $1)
LENGTH PARAMETER glGetShaderiv 2 bugle_count_gl($f, $1)
DUMP PARAMETER glGetProgramiv 2 bugle_dump_convert($1, &$$, $t$, $W)
DUMP PARAMETER glGetShaderiv 2 bugle_dump_convert($1, &$$, $t$, $W)

# Framebuffer objects
LENGTH PARAMETER glGetRenderbufferParameteriv 2 bugle_count_gl($f, $1)
LENGTH PARAMETER glGetFramebufferAttachmentParameteriv 3 bugle_count_gl($f, $2)
DUMP PARAMETER glGetRenderbufferParameteriv 2 bugle_dump_convert($1, &$$, $t$, $W)
DUMP PARAMETER glGetFramebufferAttachmentParameteriv 3 bugle_dump_convert($2, &$$, $t$, $W)

